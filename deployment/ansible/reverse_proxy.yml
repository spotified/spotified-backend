---
- hosts: [reverse_proxy]
  remote_user: "{{ remote_user }}"

  pre_tasks:
    - raw: apt-get install -y python-simplejson

  tasks:
    - name: Upgrade system
      apt: upgrade=dist update_cache=yes

    - name: Install nginx
      apt: name=nginx state=latest

    - name: install letsencrypt
      apt: name=letsencrypt state=latest

    - name: install certbot
      apt: name=certbot state=latest

    - name: create letsencrypt directory
      file: name=/var/www/letsencrypt state=directory

    - name: Remove default nginx config
      file: name=/etc/nginx/sites-enabled/default state=absent

    - name: Remove default nginx config
      file: name=/etc/nginx/sites-available/default state=absent

    - name: Install system nginx config
      template:
        src: templates/nginx.conf.j2
        dest: /etc/nginx/nginx.conf

    - name: Install nginx site for letsencrypt requests
      template:
        src: templates/nginx-http.j2
        dest: /etc/nginx/sites-available/http

    - name: Enable nginx site for letsencrypt requests
      file:
        src: /etc/nginx/sites-available/http
        dest: /etc/nginx/sites-enabled/http
        owner: www-data
        group: www-data
        state: link

    - name: Install nginx site for specified site
      template:
        src: templates/nginx-https.j2
        dest: /etc/nginx/sites-available/https

    - name: Enable nginx site for specified site
      file:
        src: /etc/nginx/sites-available/https
        dest: /etc/nginx/sites-enabled/https
        owner: www-data
        group: www-data
        state: link

    - name: Reload nginx to activate letsencrypt site
      service: name=nginx state=restarted

    - name: Create letsencrypt certificate
      shell: letsencrypt certonly -n --webroot -w /var/www/letsencrypt -m {{ letsencrypt_email }} --agree-tos -d {{ domain_name }}
      args:
        creates: /etc/letsencrypt/live/{{ domain_name }}

    - name: Generate dhparams
      shell: openssl dhparam -out /etc/nginx/dhparams.pem 4098
      args:
        creates: /etc/nginx/dhparams.pem

    - name: Creates static app dir
      file:
        path: "{{ app_home }}/"
        state: directory

    - name: Reload nginx to activate specified site
      service: name=nginx state=restarted

    - name: Add letsencrypt cronjob for cert renewal
      cron:
        name: letsencrypt_renewal
        special_time: weekly
        job: letsencrypt --renew certonly -n --webroot -w /var/www/letsencrypt -m {{ letsencrypt_email }} --agree-tos -d {{ domain_name }} && service nginx reload

    - name: Install Varnish
      apt: name=varnish state=latest

    - name: Install Varnish default.vcl
      template:
        src: templates/varnish.vcl.j2
        dest: /etc/varnish/default.vcl

    - name: Reload Varnish
      service: name=varnish state=restarted
